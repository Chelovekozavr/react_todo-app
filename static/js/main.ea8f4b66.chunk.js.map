{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/constants.js","components/TodoFilters.jsx","App.js","index.js"],"names":["TodoItem","title","id","completed","changeTodo","deleteTodo","useState","newTitle","setNewTitle","editTitle","setEditTitle","className","classNames","editing","onDoubleClick","type","checked","onChange","onClick","autoFocus","defaultValue","event","target","value","trim","onKeyDown","key","onBlur","TodoList","filteredTodos","changeStatusAll","every","todo","htmlFor","map","FILTERS","TodoFilters","setFilter","filter","href","App","todos","setTodos","newTodo","setNewTodo","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","useMemo","todosList","filters","item","changeFilter","onSubmit","todoToAdd","preventDefault","Date","placeholder","length","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea8f4b66.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({\n  title,\n  id,\n  completed,\n  changeTodo,\n  deleteTodo,\n}) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [editTitle, setEditTitle] = useState(false);\n\n  const edit = (event) => {\n    if (event.key === 'Enter' && newTitle) {\n      changeTodo(id, newTitle);\n      setEditTitle(false);\n      setNewTitle('');\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle('');\n      setEditTitle(false);\n    }\n  };\n\n  const saveChanges = (event) => {\n    if (newTitle) {\n      changeTodo(id, newTitle);\n      setEditTitle(false);\n      setNewTitle('');\n    } else {\n      setEditTitle(false);\n      setNewTitle('');\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed,\n        editing: editTitle,\n      })}\n      onDoubleClick={() => {\n        setEditTitle(!editTitle);\n      }}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => changeTodo(id)\n          }\n        />\n        <label>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)\n          }\n        />\n      </div>\n      {editTitle && (\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"edit\"\n          defaultValue={title}\n          onChange={event => setNewTitle(event.target.value.trim())}\n          onKeyDown={edit}\n          onBlur={saveChanges}\n        />\n      )}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  filteredTodos,\n  changeStatusAll,\n  changeTodo,\n  deleteTodo,\n}) => (\n  <section className=\"main\">\n\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={filteredTodos.every(todo => todo.completed)}\n      onChange={() => {\n        changeStatusAll();\n      }}\n    />\n\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          title={todo.title}\n          id={todo.id}\n          completed={todo.completed}\n          changeTodo={changeTodo}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  changeTodo: PropTypes.func.isRequired,\n  changeStatusAll: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","export const FILTERS = { all: 'all', active: 'active', completed: 'completed' };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from './constants';\n\nexport const TodoFilters = ({ setFilter, filter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={filter === FILTERS.all ? 'selected' : ''}\n        onClick={() => setFilter(FILTERS.all)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={filter === FILTERS.active ? 'selected' : ''}\n        onClick={() => setFilter(FILTERS.active)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={filter === FILTERS.completed ? 'selected' : ''}\n        onClick={() => setFilter(FILTERS.completed)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilters.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilters } from './components/TodoFilters';\nimport { FILTERS } from './components/constants';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [filter, setFilter] = useState(FILTERS.all);\n\n  useEffect(() => {\n    if (localStorage.getItem('data')) {\n      setTodos(JSON.parse(localStorage.getItem('data')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (todoToAdd) => {\n    setTodos([...todos, todoToAdd]);\n  };\n\n  const changeTodo = (id, title) => {\n    setTodos(todos.map((todo) => {\n      if (title && todo.id === id) {\n        return {\n          ...todo,\n          title,\n        };\n      }\n\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeStatusAll = () => {\n    if (todos.some(todo => !todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: true })));\n    } else {\n      setTodos(todos.map(todo => ({ ...todo, completed: false })));\n    }\n  };\n\n  const changeFilter = (todosList, filters) => {\n    switch (filters) {\n      case FILTERS.active:\n        return todosList.filter(item => !item.completed);\n\n      case FILTERS.completed:\n        return todosList.filter(item => item.completed);\n\n      default:\n        return todosList;\n    }\n  };\n\n  const filteredTodos = useMemo(\n    () => changeFilter(todos, filter),\n    [todos, filter],\n  );\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const deleteAllCompleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            addTodo({\n              title: newTodo,\n              id: +new Date(),\n              completed: false,\n            });\n            setNewTodo('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={(event) => {\n              setNewTodo(event.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0\n        && (\n          <>\n            <TodoList\n              filteredTodos={filteredTodos}\n              changeStatusAll={changeStatusAll}\n              changeTodo={changeTodo}\n              deleteTodo={deleteTodo}\n            />\n\n            <footer className=\"footer\">\n              <span className=\"todo-count\">\n                {todos.filter(todo => !todo.completed).length}\n                {' '}\n                items left\n              </span>\n\n              <TodoFilters\n                filter={filter}\n                setFilter={setFilter}\n              />\n\n              {todos.filter(todo => todo.completed).length > 0\n              && (\n                <button\n                  type=\"button\"\n                  className=\"clear-completed\"\n                  onClick={() => deleteAllCompleted()}\n                >\n                  Clear completed\n                </button>\n              )\n              }\n            </footer>\n          </>\n        )\n      }\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}