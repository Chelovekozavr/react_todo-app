{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.js","index.js"],"names":["TodoItem","title","id","completed","changeStatus","className","type","checked","onChange","TodoList","todos","changeStatusAll","every","todo","htmlFor","map","key","App","useState","setTodos","newTodo","setNewTodo","onSubmit","event","todoToAdd","preventDefault","Date","placeholder","value","target","some","filter","length","href","ReactDOM","render","document","getElementById"],"mappings":"2SAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,aAAzB,OACtB,wBAAIC,UAAWF,EAAY,YAAc,IACvC,yBAAKE,UAAU,QACb,2BACEC,KAAK,WACLD,UAAU,SACVE,QAASJ,EACTK,SAAU,WACRJ,EAAaF,MAGjB,+BAAQD,GACR,4BAAQK,KAAK,SAASD,UAAU,aAElC,2BAAOC,KAAK,OAAOD,UAAU,WCZpBI,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,gBAAiBP,EAA3B,EAA2BA,aAA3B,OACtB,6BAASC,UAAU,QAEjB,2BACEC,KAAK,WACLJ,GAAG,aACHG,UAAU,aACVE,QAASG,EAAME,OAAM,SAAAC,GAAI,OAAIA,EAAKV,aAClCK,SAAU,WACRG,OAIJ,2BAAOG,QAAQ,cAAf,wBACA,wBAAIT,UAAU,aACXK,EAAMK,KAAI,SAAAF,GAAI,OACb,kBAAC,EAAD,CACEG,IAAKH,EAAKX,GACVD,MAAOY,EAAKZ,MACZC,GAAIW,EAAKX,GACTC,UAAWU,EAAKV,UAChBC,aAAcA,UCmFTa,EAzGH,WACV,IADgB,EAcUC,mBAAS,GAAD,OAbhB,CAChB,CACEjB,MAAO,cACPC,GAAI,EACJC,WAAW,GAEb,CACEF,MAAO,WACPC,GAAI,EACJC,WAAW,MAVC,mBAcTO,EAdS,KAcFS,EAdE,OAecD,mBAAS,IAfvB,mBAeTE,EAfS,KAeAC,EAfA,KA0ChB,OACE,6BAAShB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BACEiB,SAAU,SAACC,GA/BH,IAACC,EAgCPD,EAAME,iBAhCCD,EAiCC,CACNvB,MAAOmB,EACPlB,IAAK,IAAIwB,KACTvB,WAAW,GAnCrBgB,EAAS,GAAD,mBAAKT,GAAL,CAAYc,KAqCZH,EAAW,MAGb,2BACEf,KAAK,OACLD,UAAU,WACVsB,YAAY,yBACZC,MAAOR,EACPZ,SAAU,SAACe,GACTF,EAAWE,EAAMM,OAAOD,YAMhC,kBAAC,EAAD,CACElB,MAAOA,EACPC,gBAtCkB,WAClBD,EAAMoB,MAAK,SAAAjB,GAAI,OAAKA,EAAKV,aAC3BgB,EAAST,EAAMK,KAAI,SAAAF,GAAI,kCAAUA,GAAV,IAAgBV,WAAW,QAElDgB,EAAST,EAAMK,KAAI,SAAAF,GAAI,kCAAUA,GAAV,IAAgBV,WAAW,SAmChDC,aApDe,SAACF,GACpBiB,EAAST,EAAMK,KAAI,SAACF,GAClB,OAAIA,EAAKX,KAAOA,EACP,2BACFW,GADL,IAEEV,WAAYU,EAAKV,YAIdU,SA8CP,4BAAQR,UAAU,UAChB,0BAAMA,UAAU,cACbK,EAAMqB,QAAO,SAAAlB,GAAI,OAAKA,EAAKV,aAAW6B,OACtC,IAFH,cAMA,wBAAI3B,UAAU,WACZ,4BACE,uBAAG4B,KAAK,KAAK5B,UAAU,YAAvB,QAGF,4BACE,uBAAG4B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ3B,KAAK,SAASD,UAAU,mBAAhC,sBC5FR6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a2807324.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ title, id, completed, changeStatus }) => (\n  <li className={completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={completed}\n        onChange={() => {\n          changeStatus(id);\n        }}\n      />\n      <label>{title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ todos, changeStatusAll, changeStatus }) => (\n  <section className=\"main\">\n\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={todos.every(todo => todo.completed)}\n      onChange={() => {\n        changeStatusAll();\n      }}\n    />\n\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          title={todo.title}\n          id={todo.id}\n          completed={todo.completed}\n          changeStatus={changeStatus}\n        />\n      ))}\n\n      {/*\n\n        <li className=\"completed\">\n        <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>qwertyuio</label>\n        <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"editing\">\n        <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li>\n        <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>1234567890</label>\n        <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n        </li>\n\n        */}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  changeStatusAll: PropTypes.func.isRequired,\n};\n","\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nconst App = () => {\n  const todosTest = [\n    {\n      title: 'make things',\n      id: 1,\n      completed: false,\n    },\n    {\n      title: 'do tasks',\n      id: 2,\n      completed: false,\n    },\n  ];\n\n  const [todos, setTodos] = useState([...todosTest]);\n  const [newTodo, setNewTodo] = useState('');\n\n  const addTodo = (todoToAdd) => {\n    setTodos([...todos, todoToAdd]);\n  };\n\n  const changeStatus = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeStatusAll = () => {\n    if (todos.some(todo => !todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: true })));\n    } else {\n      setTodos(todos.map(todo => ({ ...todo, completed: false })));\n    }\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            addTodo({\n              title: newTodo,\n              id: +new Date(),\n              completed: false,\n            });\n            setNewTodo('');\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={(event) => {\n              setNewTodo(event.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      <TodoList\n        todos={todos}\n        changeStatusAll={changeStatusAll}\n        changeStatus={changeStatus}\n      />\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todos.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}